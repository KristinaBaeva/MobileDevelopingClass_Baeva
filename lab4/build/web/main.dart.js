// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const icons = flutter_sdk.src__material__icons;
  const scaffold = flutter_sdk.src__material__scaffold;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const box_border = flutter_sdk.src__painting__box_border;
  const gradient = flutter_sdk.src__painting__gradient;
  const alignment = flutter_sdk.src__painting__alignment;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const colors = flutter_sdk.src__material__colors;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const spacer = flutter_sdk.src__widgets__spacer;
  const image = flutter_sdk.src__widgets__image;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $toLowerCase = dartx.toLowerCase;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $toStringAsFixed = dartx.toStringAsFixed;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWeatherCard: () => (T.JSArrayOfWeatherCard = dart.constFn(_interceptors.JSArray$(main.WeatherCard)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextAndintToWidget: () => (T.BuildContextAndintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, core.int])))(),
    StackTraceN: () => (T.StackTraceN = dart.constFn(dart.nullable(core.StackTrace)))(),
    BuildContextAndObjectAndStackTraceNToIcon: () => (T.BuildContextAndObjectAndStackTraceNToIcon = dart.constFn(dart.fnType(icon.Icon, [framework.BuildContext, core.Object, T.StackTraceN()])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    },
    get C4() {
      return C[4] = dart.constList([0, 0.5, 1], core.double);
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281152088
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280559173
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284559275
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8], ui.Color);
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.TileMode.prototype,
        [_Enum__name]: "clamp",
        [_Enum_index]: 0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 0
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: C[4] || CT.C4,
        [Gradient_colors]: C[5] || CT.C5,
        [LinearGradient_tileMode]: C[9] || CT.C9,
        [LinearGradient_end]: C[10] || CT.C10,
        [LinearGradient_begin]: C[11] || CT.C11
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: box_decoration.BoxDecoration.prototype,
        [BoxDecoration_shape]: C[2] || CT.C2,
        [BoxDecoration_backgroundBlendMode]: null,
        [BoxDecoration_gradient]: C[3] || CT.C3,
        [BoxDecoration_boxShadow]: null,
        [BoxDecoration_borderRadius]: null,
        [BoxDecoration_border]: null,
        [BoxDecoration_image]: null,
        [BoxDecoration_color]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 50,
        [EdgeInsets_left]: 20
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[15] || CT.C15,
        [TextStyle_fontSize]: 34,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[16] || CT.C16,
        [TextStyle_inherit]: true
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[14] || CT.C14,
        [Text_textSpan]: null,
        [Text_data]: "Weather"
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 20
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284036788
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[15] || CT.C15,
        [TextStyle_fontSize]: 80,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[16] || CT.C16,
        [TextStyle_inherit]: true
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[16] || CT.C16,
        [TextStyle_inherit]: true
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[16] || CT.C16,
        [TextStyle_inherit]: true
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: spacer.Spacer.prototype,
        [Widget_key]: null,
        [Spacer_flex]: 1
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    }
  }, false);
  var C = Array(25).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var temperature$ = dart.privateName(main, "WeatherCard.temperature");
  var city$ = dart.privateName(main, "WeatherCard.city");
  var country$ = dart.privateName(main, "WeatherCard.country");
  var weatherType$ = dart.privateName(main, "WeatherCard.weatherType");
  var assetPath$ = dart.privateName(main, "WeatherCard.assetPath");
  main.WeatherCard = class WeatherCard extends core.Object {
    get temperature() {
      return this[temperature$];
    }
    set temperature(value) {
      super.temperature = value;
    }
    get city() {
      return this[city$];
    }
    set city(value) {
      super.city = value;
    }
    get country() {
      return this[country$];
    }
    set country(value) {
      super.country = value;
    }
    get weatherType() {
      return this[weatherType$];
    }
    set weatherType(value) {
      super.weatherType = value;
    }
    get assetPath() {
      return this[assetPath$];
    }
    set assetPath(value) {
      super.assetPath = value;
    }
    static ['_#new#tearOff'](opts) {
      let temperature = opts && 'temperature' in opts ? opts.temperature : null;
      let city = opts && 'city' in opts ? opts.city : null;
      let country = opts && 'country' in opts ? opts.country : null;
      let weatherType = opts && 'weatherType' in opts ? opts.weatherType : null;
      let assetPath = opts && 'assetPath' in opts ? opts.assetPath : null;
      return new main.WeatherCard.new({temperature: temperature, city: city, country: country, weatherType: weatherType, assetPath: assetPath});
    }
  };
  (main.WeatherCard.new = function(opts) {
    let temperature = opts && 'temperature' in opts ? opts.temperature : null;
    let city = opts && 'city' in opts ? opts.city : null;
    let country = opts && 'country' in opts ? opts.country : null;
    let weatherType = opts && 'weatherType' in opts ? opts.weatherType : null;
    let assetPath = opts && 'assetPath' in opts ? opts.assetPath : null;
    this[temperature$] = temperature;
    this[city$] = city;
    this[country$] = country;
    this[weatherType$] = weatherType;
    this[assetPath$] = assetPath;
    ;
  }).prototype = main.WeatherCard.prototype;
  dart.addTypeTests(main.WeatherCard);
  dart.addTypeCaches(main.WeatherCard);
  dart.setLibraryUri(main.WeatherCard, I[0]);
  dart.setFieldSignature(main.WeatherCard, () => ({
    __proto__: dart.getFields(main.WeatherCard.__proto__),
    temperature: dart.finalFieldType(core.String),
    city: dart.finalFieldType(core.String),
    country: dart.finalFieldType(core.String),
    weatherType: dart.finalFieldType(core.String),
    assetPath: dart.finalFieldType(core.String)
  }));
  var cards = dart.privateName(main, "WeatherApp.cards");
  main.WeatherApp = class WeatherApp extends framework.StatelessWidget {
    get cards() {
      return this[cards];
    }
    set cards(value) {
      super.cards = value;
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, home: new main.WeatherHomePage.new({cards: this.cards})});
    }
    static ['_#new#tearOff']() {
      return new main.WeatherApp.new();
    }
  };
  (main.WeatherApp.new = function() {
    this[cards] = T.JSArrayOfWeatherCard().of([new main.WeatherCard.new({temperature: "19", city: "Montreal", country: "Canada", weatherType: "Mid Rain", assetPath: "assets/images/Moon.png"}), new main.WeatherCard.new({temperature: "20", city: "Toronto", country: "Canada", weatherType: "Fast Wind", assetPath: "assets/images/Wind.png"}), new main.WeatherCard.new({temperature: "15", city: "Ottawa", country: "Canada", weatherType: "Mid Rain", assetPath: "assets/images/Sun.png"}), new main.WeatherCard.new({temperature: "10", city: "Calgary", country: "Canada", weatherType: "Cloudy", assetPath: "assets/images/Cloudy.png"}), new main.WeatherCard.new({temperature: "11", city: "Edmonton", country: "Canada", weatherType: "Sunny", assetPath: "assets/images/SunCloud.png"})]);
    main.WeatherApp.__proto__.new.call(this);
    ;
  }).prototype = main.WeatherApp.prototype;
  dart.addTypeTests(main.WeatherApp);
  dart.addTypeCaches(main.WeatherApp);
  dart.setMethodSignature(main.WeatherApp, () => ({
    __proto__: dart.getMethods(main.WeatherApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.WeatherApp, I[0]);
  dart.setFieldSignature(main.WeatherApp, () => ({
    __proto__: dart.getFields(main.WeatherApp.__proto__),
    cards: dart.finalFieldType(core.List$(main.WeatherCard))
  }));
  var cards$ = dart.privateName(main, "WeatherHomePage.cards");
  main.WeatherHomePage = class WeatherHomePage extends framework.StatefulWidget {
    get cards() {
      return this[cards$];
    }
    set cards(value) {
      super.cards = value;
    }
    static ['_#new#tearOff'](opts) {
      let cards = opts && 'cards' in opts ? opts.cards : null;
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.WeatherHomePage.new({cards: cards, key: key});
    }
    createState() {
      return new main._WeatherHomePageState.new();
    }
  };
  (main.WeatherHomePage.new = function(opts) {
    let cards = opts && 'cards' in opts ? opts.cards : null;
    let key = opts && 'key' in opts ? opts.key : null;
    this[cards$] = cards;
    main.WeatherHomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.WeatherHomePage.prototype;
  dart.addTypeTests(main.WeatherHomePage);
  dart.addTypeCaches(main.WeatherHomePage);
  dart.setMethodSignature(main.WeatherHomePage, () => ({
    __proto__: dart.getMethods(main.WeatherHomePage.__proto__),
    createState: dart.fnType(main._WeatherHomePageState, [])
  }));
  dart.setLibraryUri(main.WeatherHomePage, I[0]);
  dart.setFieldSignature(main.WeatherHomePage, () => ({
    __proto__: dart.getFields(main.WeatherHomePage.__proto__),
    cards: dart.finalFieldType(core.List$(main.WeatherCard))
  }));
  var _changeTemperatureUnit = dart.privateName(main, "_changeTemperatureUnit");
  var _convertToFahrenheit = dart.privateName(main, "_convertToFahrenheit");
  var _getWeatherIcon = dart.privateName(main, "_getWeatherIcon");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var BoxDecoration_shape = dart.privateName(box_decoration, "BoxDecoration.shape");
  var BoxDecoration_backgroundBlendMode = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var Gradient_transform = dart.privateName(gradient, "Gradient.transform");
  var Gradient_stops = dart.privateName(gradient, "Gradient.stops");
  var Color_value = dart.privateName(ui, "Color.value");
  var Gradient_colors = dart.privateName(gradient, "Gradient.colors");
  var LinearGradient_tileMode = dart.privateName(gradient, "LinearGradient.tileMode");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var LinearGradient_end = dart.privateName(gradient, "LinearGradient.end");
  var LinearGradient_begin = dart.privateName(gradient, "LinearGradient.begin");
  var BoxDecoration_gradient = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var BoxDecoration_boxShadow = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var BoxDecoration_borderRadius = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var BoxDecoration_border = dart.privateName(box_decoration, "BoxDecoration.border");
  var BoxDecoration_image = dart.privateName(box_decoration, "BoxDecoration.image");
  var BoxDecoration_color = dart.privateName(box_decoration, "BoxDecoration.color");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var _buildWeatherCard = dart.privateName(main, "_buildWeatherCard");
  var Spacer_flex = dart.privateName(spacer, "Spacer.flex");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  main._WeatherHomePageState = class _WeatherHomePageState extends framework.State$(main.WeatherHomePage) {
    [_changeTemperatureUnit]() {
      this.setState(dart.fn(() => {
        this.isCelsius = !this.isCelsius;
      }, T.VoidTovoid()));
    }
    [_convertToFahrenheit](celsius) {
      let temp = core.double.parse(celsius);
      return temp * 9 / 5 + 32;
    }
    [_getWeatherIcon](type) {
      switch (type[$toLowerCase]()) {
        case "sunny":
          {
            return icons.Icons.wb_sunny;
          }
        case "cloudy":
          {
            return icons.Icons.cloud;
          }
        case "mid rain":
          {
            return icons.Icons.beach_access;
          }
        default:
          {
            return icons.Icons.device_unknown;
          }
      }
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new container.Container.new({decoration: C[1] || CT.C1, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[12] || CT.C12, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[13] || CT.C13, new icon_button.IconButton.new({icon: new icon.Icon.new(this.isCelsius ? icons.Icons.thermostat : icons.Icons.thermostat_outlined, {color: colors.Colors.white}), onPressed: dart.bind(this, _changeTemperatureUnit)})])})}), new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: this.widget.cards[$length], itemBuilder: dart.fn((context, index) => this[_buildWeatherCard](this.widget.cards[$_get](index)), T.BuildContextAndintToWidget())})})])})})});
    }
    [_buildWeatherCard](card) {
      return new container.Container.new({margin: C[17] || CT.C17, padding: C[18] || CT.C18, decoration: new box_decoration.BoxDecoration.new({color: C[19] || CT.C19, borderRadius: new border_radius.BorderRadius.only({topLeft: new ui.Radius.circular(500), bottomLeft: new ui.Radius.circular(20), topRight: new ui.Radius.circular(20), bottomRight: new ui.Radius.circular(20)})}), child: new basic.Row.new({children: T.JSArrayOfWidget().of([new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(this.isCelsius ? card.temperature + "°C" : this[_convertToFahrenheit](card.temperature)[$toStringAsFixed](1) + "°F", {style: C[20] || CT.C20}), new text.Text.new(card.city, {style: C[21] || CT.C21}), new text.Text.new(card.country, {style: C[22] || CT.C22})])}), C[23] || CT.C23, new basic.Column.new({children: T.JSArrayOfWidget().of([new image.Image.asset(card.assetPath, {width: 60, height: 60, errorBuilder: dart.fn((context, error, stackTrace) => new icon.Icon.new(this[_getWeatherIcon](card.weatherType), {size: 60, color: colors.Colors.white}), T.BuildContextAndObjectAndStackTraceNToIcon())}), C[24] || CT.C24, new text.Text.new(card.weatherType, {style: C[22] || CT.C22})])})])})});
    }
    static ['_#new#tearOff']() {
      return new main._WeatherHomePageState.new();
    }
  };
  (main._WeatherHomePageState.new = function() {
    this.isCelsius = true;
    main._WeatherHomePageState.__proto__.new.call(this);
    ;
  }).prototype = main._WeatherHomePageState.prototype;
  dart.addTypeTests(main._WeatherHomePageState);
  dart.addTypeCaches(main._WeatherHomePageState);
  dart.setMethodSignature(main._WeatherHomePageState, () => ({
    __proto__: dart.getMethods(main._WeatherHomePageState.__proto__),
    [_changeTemperatureUnit]: dart.fnType(dart.void, []),
    [_convertToFahrenheit]: dart.fnType(core.double, [core.String]),
    [_getWeatherIcon]: dart.fnType(icon_data.IconData, [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildWeatherCard]: dart.fnType(framework.Widget, [main.WeatherCard])
  }));
  dart.setLibraryUri(main._WeatherHomePageState, I[0]);
  dart.setFieldSignature(main._WeatherHomePageState, () => ({
    __proto__: dart.getFields(main._WeatherHomePageState.__proto__),
    isCelsius: dart.fieldType(core.bool)
  }));
  main.main = function main$0() {
    return binding.runApp(new main.WeatherApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
